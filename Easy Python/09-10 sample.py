#文字クラスを表す正規表現を使う
import re

#繰り返し記号を使ったパターンを用意します。
ptr = ["T*", "T+", "T?", "T{3}"]
str = ["X", "TT", "TTT", "TTTT"]

for valueptr in ptr:
    print("------------")
    pattern = re.compile(valueptr)
    for valuestr in str:
        res = pattern.search(valuestr)     #パターンマッチングを行います。
        if res is not None:
            m = "○"
        else:
            m = "×"
        msg = "(パターン)" + valueptr + "(文字列)" + valuestr + "(マッチ)" + m
        print(msg)


#------------
#(パターン)T*(文字列)X(マッチ)○
#(パターン)T*(文字列)TT(マッチ)○
#(パターン)T*(文字列)TTT(マッチ)○
#(パターン)T*(文字列)TTTT(マッチ)○
#------------
#(パターン)T+(文字列)X(マッチ)×
#(パターン)T+(文字列)TT(マッチ)○
#(パターン)T+(文字列)TTT(マッチ)○
#(パターン)T+(文字列)TTTT(マッチ)○
#------------
#(パターン)T?(文字列)X(マッチ)○
#(パターン)T?(文字列)TT(マッチ)○
#(パターン)T?(文字列)TTT(マッチ)○
#(パターン)T?(文字列)TTTT(マッチ)○
#------------
#(パターン)T{3}(文字列)X(マッチ)×
#(パターン)T{3}(文字列)TT(マッチ)×
#(パターン)T{3}(文字列)TTT(マッチ)○
#(パターン)T{3}(文字列)TTTT(マッチ)○